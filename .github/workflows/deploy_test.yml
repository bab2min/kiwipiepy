name: Publish new package into test pypi

on:
  push:
    tags:
      - 'v*.*.*d'

jobs:
  build_manylinux:
    name: Build for manylinux2010
    runs-on: ubuntu-latest
    container:
      image: docker://quay.io/pypa/manylinux2010_x86_64

    steps:        
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Install Git LFS
      run: |
        mkdir gitlfs && pushd gitlfs
        curl -L https://github.com/git-lfs/git-lfs/releases/download/v2.13.2/git-lfs-linux-amd64-v2.13.2.tar.gz | tar -zxv
        ./install.sh
        popd
    - name: Pull LFS files
      run: cd Kiwi && git config --global --add safe.directory /__w/kiwipiepy/kiwipiepy/Kiwi && git lfs pull
    - name: Deploy
      continue-on-error: True
      env:
        TWINE_USERNAME: ${{ secrets.TEST_PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
      run: |
        mv Kiwi/models/base/sj.* model/kiwipiepy_model/
        mv Kiwi/models/base/extract.mdl model/kiwipiepy_model/
        mv Kiwi/models/base/*.dict model/kiwipiepy_model/
        mv Kiwi/models/base/combiningRule.txt model/kiwipiepy_model/
        mv Kiwi/models/base/skipbigram.mdl model/kiwipiepy_model/
        
        /opt/python/cp38-cp38/bin/pip install "cmake<4"
        rm /usr/local/bin/cmake || true
        ln -s /opt/python/cp38-cp38/bin/cmake /usr/local/bin/cmake

        yum install libffi-devel -y
        /opt/python/cp38-cp38/bin/python -m pip install --upgrade pip "setuptools<71"
        /opt/python/cp38-cp38/bin/python -m pip install "readme-renderer==41.0" "cryptography<38" "twine<4" wheel numpy==`/opt/python/cp38-cp38/bin/python .github/workflows/numpy_version.py`
        /opt/python/cp38-cp38/bin/python setup.py sdist
        /opt/python/cp38-cp38/bin/python -m twine upload --repository testpypi dist/*.tar.gz
        for cp in cp38-cp38
        do
          /opt/python/${cp}/bin/python -m pip install wheel numpy==`/opt/python/${cp}/bin/python .github/workflows/numpy_version.py`
          USE_MIMALLOC=1 /opt/python/${cp}/bin/python setup.py build bdist_wheel
          auditwheel repair dist/*-${cp}-linux_x86_64.whl
        done
        /opt/python/cp38-cp38/bin/python -m twine upload --repository testpypi wheelhouse/*.whl
        
        cd model
        /opt/python/cp38-cp38/bin/python setup.py sdist
        /opt/python/cp38-cp38/bin/python -m twine upload --repository testpypi dist/*.tar.gz

  build_manylinux2014:
    name: Build for manylinux2014
    runs-on: ubuntu-latest
    container:
      image: docker://quay.io/pypa/manylinux2014_x86_64

    steps:        
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Deploy
      continue-on-error: True
      env:
        TWINE_USERNAME: ${{ secrets.TEST_PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
      run: |
        mv Kiwi/models/base/sj.* model/kiwipiepy_model/
        mv Kiwi/models/base/extract.mdl model/kiwipiepy_model/
        mv Kiwi/models/base/*.dict model/kiwipiepy_model/
        mv Kiwi/models/base/combiningRule.txt model/kiwipiepy_model/
        mv Kiwi/models/base/skipbigram.mdl model/kiwipiepy_model/
        
        /opt/python/cp311-cp311/bin/pip install "cmake<4"
        rm /usr/local/bin/cmake || true
        ln -s /opt/python/cp311-cp311/bin/cmake /usr/local/bin/cmake

        yum install libffi-devel -y
        /opt/python/cp311-cp311/bin/python -m pip install --upgrade pip setuptools
        /opt/python/cp311-cp311/bin/python -m pip install twine wheel numpy==`/opt/python/cp311-cp311/bin/python .github/workflows/numpy_version.py`
        for cp in cp39-cp39 cp310-cp310 cp311-cp311 cp312-cp312 cp313-cp313
        do
          /opt/python/${cp}/bin/python -m pip install wheel setuptools numpy==`/opt/python/${cp}/bin/python .github/workflows/numpy_version.py`
          USE_MIMALLOC=1 /opt/python/${cp}/bin/python setup.py build bdist_wheel
          auditwheel repair dist/*-${cp}-linux_x86_64.whl
        done
        /opt/python/cp311-cp311/bin/python -m twine upload --repository testpypi wheelhouse/*.whl

  build_macos_13:
    name: Build for macOS 13
    runs-on: macOS-13
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9, "3.10", 3.11, 3.12, 3.13]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Deploy
      continue-on-error: True
      env:
        TWINE_USERNAME: ${{ secrets.TEST_PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
      run: |
        python -m pip install twine wheel numpy==`python .github/workflows/numpy_version.py` setuptools
        MACOSX_DEPLOYMENT_TARGET=10.14 KIWI_CPU_ARCH=x86_64 USE_MIMALLOC=1 python setup.py bdist_wheel
        MACOSX_DEPLOYMENT_TARGET=10.14 KIWI_CPU_ARCH=arm64 USE_MIMALLOC=1 python setup.py bdist_wheel
        twine upload --repository testpypi dist/*

  build_windows:
    name: Build for Windows
    runs-on: windows-2019
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9, "3.10", 3.11, 3.12, 3.13]
        architecture: [x86, x64]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python ${{ matrix.python-version }} ${{ matrix.architecture }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}
    - name: Deploy
      continue-on-error: True
      env:
        TWINE_USERNAME: ${{ secrets.TEST_PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install twine wheel numpy==$(python .github/workflows/numpy_version.py)
        $env:USE_MIMALLOC = 1; python setup.py bdist_wheel
        twine upload --repository testpypi dist/*

  build_other_arch:
    name: Build for manylinux (other arch)
    runs-on: ubuntu-24.04-arm
    strategy:
      matrix:
        arch: [aarch64]

    steps:        
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: bab2min/run-on-arch-action@multiple-step-v2
      name: Deploy
      id: runcmd
      with:
        image: quay.io/pypa/manylinux2014_${{ matrix.arch }}
        githubToken: ${{ github.token }}
        setup: |
          mkdir -p "${PWD}/artifacts"
        dockerRunArgs: |
          --volume "${PWD}/artifacts:/artifacts"
        env: |
          TWINE_USERNAME: ${{ secrets.TEST_PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
        multipleRun: |
          - name: Build
            run: |
              /opt/python/cp311-cp311/bin/pip install "cmake<4"
              rm /usr/local/bin/cmake || true
              ln -s /opt/python/cp311-cp311/bin/cmake /usr/local/bin/cmake
              for cp in cp39-cp39 cp310-cp310 cp311-cp311 cp312-cp312 cp313-cp313
              do
                /opt/python/${cp}/bin/python -m pip install --upgrade pip setuptools
                /opt/python/${cp}/bin/python -m pip install wheel numpy==`/opt/python/${cp}/bin/python .github/workflows/numpy_version.py`
                USE_MIMALLOC=1 /opt/python/${cp}/bin/python setup.py build bdist_wheel
                auditwheel repair dist/*-${cp}-*.whl
              done
              mv wheelhouse/*.whl /artifacts/
    - name: Upload wheels
      env:
        TWINE_USERNAME: ${{ secrets.TEST_PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
      run: |
        python3 -m pip install --upgrade pip setuptools
        python3 -m pip install twine wheel
        python3 -m twine upload --repository testpypi artifacts/*.whl
